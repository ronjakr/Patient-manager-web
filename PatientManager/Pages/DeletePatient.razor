@page "/delete-patient"
@using PatientManager.Services
@using PatientManager.Models
@inject PatientService patientService

<h3>Delete Patient</h3>

<p>Enter the ID of the patient to be deleted </p>

<input type="number" @bind="patientId" placeholder="Patient ID"/>
<button type="submit" @onclick="DeletePatientById">Delete Patient</button>
@* <button type="submit" @onclick="ClearInput">Clear</button> *@

@if (isDeleted)
{
    <div class="mt-5">
        <h4>Deleted patient:</h4>
        <table class="table">
        <thead>
            <tr>
                <th>Patient ID</th>
                <th>Name</th>
                <th>Date of Birth</th>
                <th>Age</th>
                <th>Conditions</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@deletedPatient.Id</td>
                <td>@deletedPatient.Name</td>
                <p>Date of Birth: @deletedPatient.DateOfBirth.ToString("dd/MM/yyyy")</p>
                <td>@patientService.CalculateAge(deletedPatient.DateOfBirth)</td>
                <td>@string.Join(", ", deletedPatient.Conditions)</td>
            </tr>
        </tbody>
        </table>
        @* <h4>Deleted patient:</h4>
        <p>ID: @deletedPatient.Id</p>
        <p>Name: @deletedPatient.Name</p>
        <p>Date of Birth: @deletedPatient.DateOfBirth.ToString("dd/MM/yyyy")</p>
        <p>Age: @patientService.CalculateAge(deletedPatient.DateOfBirth)</p>
        <p>Conditions: @string.Join(", ", deletedPatient.Conditions)</p> *@
    </div>
}

else if (isFailed)
{
    <p style="color: red;">Patient not found. Please check the ID and try again.</p>
}

@code {
    private int? patientId = null;
    private bool isDeleted = false;
    private bool isFailed = false;
    private Patient deletedPatient = null;

    private void DeletePatientById()
    {
        // do nothing if button is clicked without providing id
        if (!patientId.HasValue)
        {
            return;
        }

        // retrieve details of patient to delete
        var patient = patientService.GetPatientById(patientId.Value);
        if (patient != null)  // patient exists
        {
            var isSuccess = patientService.DeletePatient(patientId.Value);
            deletedPatient = patient;  // Store the deleted patient information
            isDeleted = true;
        }

        else
        {
            isFailed = true;
        }
    }

    @* private void ClearInput()
    {
        patientId = null;
        isDeleted = false;
    } *@
}
